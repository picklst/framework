# Generated by Django 3.0.4 on 2020-05-26 22:44

from django.db import migrations, models
import django.db.models.deletion
import framework.utils.cornflakes.fields
import media.fields
import media.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('list', '0001_initial'),
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemMedia',
            fields=[
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='media.Media', unique=True)),
            ],
            options={
                'verbose_name': 'Item Media',
                'verbose_name_plural': 'Item Media',
                'db_table': 'item_media',
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', framework.utils.cornflakes.fields.ShadedIDField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=127, unique=True, verbose_name='Slug')),
                ('isActive', models.BooleanField(default=True)),
                ('isPrivate', models.BooleanField(default=False)),
                ('isRanked', models.BooleanField(default=False)),
                ('forceCuratorRanking', models.BooleanField(default=False)),
                ('isVotable', models.BooleanField(default=False)),
                ('areVotesPrivate', models.BooleanField(default=False)),
                ('canVoteMultipleItems', models.BooleanField(default=False)),
                ('isRateable', models.BooleanField(default=False)),
                ('areRatingsPrivate', models.BooleanField(default=False)),
                ('acceptEntries', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.CharField(blank=True, default='', max_length=511, verbose_name='Description')),
                ('cover', media.fields.MediaField(blank=True, null=True, storage=media.storages.ListCoverStorage(), upload_to='')),
                ('timestampCreated', models.DateTimeField(auto_now=True)),
                ('timestampLastEdited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'List',
                'verbose_name_plural': 'Lists',
                'db_table': 'list',
            },
        ),
        migrations.CreateModel(
            name='ListVote',
            fields=[
                ('id', framework.utils.cornflakes.fields.ShadedIDField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'List Vote',
                'verbose_name_plural': 'List Votes',
                'db_table': 'list_item_vote',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', framework.utils.cornflakes.fields.ShadedIDField(primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item-User Rating',
                'verbose_name_plural': 'Item-User Ratings',
                'db_table': 'item_rating',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='position_item', serialize=False, to='list.Item')),
            ],
            options={
                'verbose_name': 'List-Item Position',
                'verbose_name_plural': 'List-Item Positions',
                'db_table': 'item_position',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', framework.utils.cornflakes.fields.ShadedIDField(primary_key=True, serialize=False)),
                ('isNegative', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.Item')),
            ],
            options={
                'verbose_name': 'Item-User Vote',
                'verbose_name_plural': 'Item-User Vote',
                'db_table': 'item_vote',
            },
        ),
    ]
